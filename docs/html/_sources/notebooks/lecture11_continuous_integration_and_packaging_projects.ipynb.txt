{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 11) Automated testing and packaging your project"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## FYI: Continuous integration\n",
    "\n",
    "Wouldn't it be nice if every time we pushed to GitHub, all of our tests were run and we got a report on whether they passed?\n",
    "\n",
    "So many people want this that there are multiple tools to help you do so. A commonly used one is [Travis CI](https://docs.travis-ci.com/user/getting-started/). Start by signing up at https://travis-ci.org/ and follow the directions to hook it to your GitHub account. We are using the free version so it does not prioritize running our tests, but they will run eventually, and you'll get a report as to whether all tests pass on its system. \n",
    "\n",
    "![Screen shot](images/lect11_travis-hook.png)\n",
    "![Screen shot](images/lect11_travisCI.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Setting up your package to run anywhere\n",
    "\n",
    "First, we need a place where we will have all our programs on our computer, that our OS will look at to find them. See if you already have the folder: `$HOME/.local/bin`. If not, please create it. \n",
    "\n",
    "We also need to tell bash that this is a place to look for code. Find where your PATHs are noted (either .bashrc or .bash_profile) and add this line:\n",
    "~~~\n",
    "PATH=$PATH:$HOME/.local/bin\n",
    "~~~\n",
    "\n",
    "Save and source the file (e.g. `. .bashrc`). "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, in your python project, go to `setup.py` in the main directory for your project. Make sure that the following line is there:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "    entry_points={'console_scripts': ['data_proc = arthritis_proj.data_proc:main',\n",
    "                                      ],\n",
    "                  },     package_dir={'arthritis_proj': 'arthritis_proj'}, install_requires=['numpy', 'matplotlib']\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "These `entry_points` are how we will invoke the project on the command line (type `data_proc` to launch `arthritis_proj.data_proc:main`). "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, open the terminal to the main directory and run\n",
    "\n",
    "~~~\n",
    "python setup.py sdist\n",
    "~~~\n",
    "\n",
    "If this is your first time running the command, it will create the folder `dist`. Let's look there; you should see a `.tar.gz` file there.\n",
    "\n",
    "![Screen shot](images/lect10_dist.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This is a rather log name. It is identifying exactly which git version is associated with this tarball. Let's give it a nicer looking name by adding a tag:\n",
    "\n",
    "~~~\n",
    "git tag -a 'ver0.0' -m 'Initial version with tests'\n",
    "~~~\n",
    "\n",
    "Again running `python setup.py sdist` we see a nicer name, and will delete the old one.\n",
    "\n",
    "![Screen shot](images/lect10_dist2.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, let's install the package!\n",
    "\n",
    "~~~\n",
    "pip install dist/arthritis_proj-ver0.0.tar.gz --user\n",
    "~~~\n",
    "\n",
    "Note: We can copy this tarball to any other system and install it in the same way. After the first time you install the project, you'll want to add the `--upgrade` flag after `install`. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's check that this worked. First, let's see if `data_proc` is now in `$HOME/.local/bin`. It is! Hooray!\n",
    "\n",
    "Now, I'm going to go to an entirely different directory and make a file `data.csv` with the following data:\n",
    "~~~\n",
    "1,2,3,4,5\n",
    "6,7,8,9,10\n",
    "3,6,8,2,1\n",
    "6,2,9,2,0\n",
    "~~~"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In that directory, all I need to do is enter `data_proc`, and the program runs!\n",
    "~~~\n",
    "truffle:hw_solutions hbmayes$ data_proc \n",
    "Wrote file: data_stats.csv\n",
    "Wrote file: data_stats.png\n",
    "~~~\n",
    "\n",
    "![Output](images/lect10_data_stats.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Next steps\n",
    "\n",
    "We continue building on your programming skills, going more into helpful libraries including numpy and pandas."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
